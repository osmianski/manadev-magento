<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magento.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magento.com for more information.
 *
 * @category    design
 * @package     rwd_default
 * @copyright   Copyright (c) 2006-2014 X.commerce, Inc. (http://www.magento.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<?php
    /* @var $this Mage_ConfigurableSwatches_Block_Catalog_Media_Js_Abstract */
?>

<script type="text/javascript">
    $j(document).off('product-media-loaded').on('product-media-loaded', function() {
        ConfigurableMediaImages.init('<?php echo $this->getImageType(); ?>');
        <?php foreach ($this->getProductImageFallbacks() as $imageFallback): ?>
        ConfigurableMediaImages.setImageFallback(<?php echo $imageFallback['product']->getId(); ?>, $j.parseJSON('<?php echo $imageFallback['image_fallback']; ?>'));
        <?php endforeach; ?>
        $j(document).trigger('configurable-media-images-init', ConfigurableMediaImages);
    });
    if (typeof _savedConfigurableSwatches === 'undefined') { _savedConfigurableSwatches = {}; }
    $j(document).bind('m-ajax-before', function () {
          $j('.configurable-swatch-list li').each(function() {
              var $swatch = $j(this);

              if ($swatch.hasClass('selected')) {
                  var productId = $swatch.data('product-id');
                  var index = $swatch.parent().children().index($swatch);
                  _savedConfigurableSwatches[productId] = index;
              }
          });
    });
    $j(document).bind('m-ajax-after', function () {
        ConfigurableMediaImages.init('<?php echo $this->getImageType(); ?>');
        <?php foreach ($this->getProductImageFallbacks() as $imageFallback): ?>
        ConfigurableMediaImages.setImageFallback(<?php echo $imageFallback['product']->getId(); ?>, $j.parseJSON('<?php echo $imageFallback['image_fallback']; ?>'));
        <?php endforeach; ?>
        $j(document).trigger('configurable-media-images-init', ConfigurableMediaImages);
        
        $j('.configurable-swatch-list li').each(function () {
            var $swatch = $j(this);
            var productId = $swatch.data('product-id');
            var index = _savedConfigurableSwatches[productId];

            if (index !== undefined) {
                if (index == $swatch.parent().children().index($swatch)) {
                    ConfigurableSwatchesList.handleSwatchSelect($swatch);
                }
            }
        });
        
    });
</script>
